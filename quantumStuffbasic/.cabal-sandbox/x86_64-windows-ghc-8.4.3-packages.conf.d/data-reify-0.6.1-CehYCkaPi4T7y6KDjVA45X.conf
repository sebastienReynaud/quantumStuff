name: data-reify
version: 0.6.1
id: data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
key: data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
license: BSD-3-Clause
copyright: (c) 2009 Andy Gill
maintainer: Andy Gill <andygill@ku.edu>
author: Andy Gill
stability: alpha
homepage: http://ku-fpg.github.io/software/data-reify/
synopsis: Reify a recursive data structure into an explicit graph.
description:
    'data-reify' provided the ability to turn recursive structures into explicit graphs.
    Many (implicitly or explicitly) recursive data structure can be given this ability, via
    a type class instance. This gives an alternative to using 'Ref' for observable sharing.
    .
    Observable sharing in general is unsafe, so we use the IO monad to bound this effect,
    but can be used safely even with 'unsafePerformIO' if some simple conditions are met.
    Typically this package will be used to tie the knot with DSL's that depend of
    observable sharing, like Lava.
    .
    Providing an instance for 'MuRef' is the mechanism for allowing a structure to be
    reified into a graph, and several examples of this are provided.
    .
    History:
    Version 0.1 used unsafe pointer compares.
    Version 0.2 of 'data-reify' used 'StableName's, and was much faster.
    Version 0.3 provided two versions of 'MuRef', the mono-typed version,
    for trees of a single type,
    and the dynamic-typed version, for trees of different types.
    Version 0.4 used 'Int' as a synonym for 'Unique' rather than 'Data.Unique'
    for node ids, by popular demand.
    Version 0.5 merged the mono-typed and dynamic version again, by using
    'DynStableName', an unphantomized version of StableName.
    .
    &#169; 2009 Andy Gill; BSD3 license.
category: Language, Data, Parsing, Reflection
abi: 2e8a5724f396d2f573c1e753c13bb3e4
exposed: True
exposed-modules:
    Data.Reify Data.Reify.Graph
import-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
library-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
dynamic-library-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3
data-dir: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\data-reify-0.6.1
hs-libraries: HSdata-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
depends:
    base-4.11.1.0 containers-0.5.11.0
abi-depends: base-4.11.1.0=6bcc87f26fece7bc3dfd6e23d2246271
             containers-0.5.11.0=92cf7f35178e47b40f68a145782e1031
haddock-interfaces: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\doc\x86_64-windows-ghc-8.4.3\data-reify-0.6.1\html\data-reify.haddock
haddock-html: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\doc\x86_64-windows-ghc-8.4.3\data-reify-0.6.1\html
