name: ad
version: 4.4
id: ad-4.4-497ZLZkOhOb4Fa5UWyyUGs
key: ad-4.4-497ZLZkOhOb4Fa5UWyyUGs
license: BSD-3-Clause
copyright: (c) Edward Kmett 2010-2015,
           (c) Barak Pearlmutter and Jeffrey Mark Siskind 2008-2009
maintainer: ekmett@gmail.com
author: Edward Kmett
stability: Experimental
homepage: http://github.com/ekmett/ad
synopsis: Automatic Differentiation
description:
    Forward-, reverse- and mixed- mode automatic differentiation combinators with a common API.
    .
    Type-level \"branding\" is used to both prevent the end user from confusing infinitesimals
    and to limit unsafe access to the implementation details of each Mode.
    .
    Each mode has a separate module full of combinators.
    .
    * @Numeric.AD.Mode.Forward@ provides basic forward-mode AD. It is good for computing simple derivatives.
    .
    * @Numeric.AD.Mode.Reverse@ uses benign side-effects to compute reverse-mode AD. It is good for computing gradients in one pass. It generates a Wengert list (linear tape) using @Data.Reflection@.
    .
    * @Numeric.AD.Mode.Kahn@ uses benign side-effects to compute reverse-mode AD. It is good for computing gradients in one pass. It generates a tree-like tape that needs to be topologically sorted in the end.
    .
    * @Numeric.AD.Mode.Sparse@ computes a sparse forward-mode AD tower. It is good for higher derivatives or large numbers of outputs.
    .
    * @Numeric.AD.Mode.Tower@ computes a dense forward-mode AD tower useful for higher derivatives of single input functions.
    .
    * @Numeric.AD@ computes using whichever mode or combination thereof is suitable to each individual combinator.
    .
    While not every mode can provide all operations, the following basic operations are supported, modified as
    appropriate by the suffixes below:
    .
    * 'grad' computes the gradient (partial derivatives) of a function at a point.
    .
    * 'jacobian' computes the Jacobian matrix of a function at a point.
    .
    * 'diff' computes the derivative of a function at a point.
    .
    * 'du' computes a directional derivative of a function at a point.
    .
    * 'hessian' computes the Hessian matrix (matrix of second partial derivatives) of a function at a point.
    .
    The following suffixes alter the meanings of the functions above as follows:
    .
    * @\'@ -- also return the answer
    .
    * @With@ lets the user supply a function to blend the input with the output
    .
    * @F@ is a version of the base function lifted to return a 'Traversable' (or 'Functor') result
    .
    * @s@ means the function returns all higher derivatives in a list or f-branching 'Stream'
    .
    * @T@ means the result is transposed with respect to the traditional formulation.
    .
    * @0@ means that the resulting derivative list is padded with 0s at the end.
    .
    * @NoEq@ means that an infinite list of converging values is returned rather than truncating the list when they become constant
category: Math
abi: 9b20ffa26ff7943bcc0aa493a9827101
exposed: True
exposed-modules:
    Numeric.AD Numeric.AD.Halley Numeric.AD.Internal.Dense
    Numeric.AD.Internal.Forward Numeric.AD.Internal.Forward.Double
    Numeric.AD.Internal.Identity Numeric.AD.Internal.Kahn
    Numeric.AD.Internal.On Numeric.AD.Internal.Or
    Numeric.AD.Internal.Reverse Numeric.AD.Internal.Sparse
    Numeric.AD.Internal.Tower Numeric.AD.Internal.Type
    Numeric.AD.Jacobian Numeric.AD.Jet Numeric.AD.Mode
    Numeric.AD.Mode.Forward Numeric.AD.Mode.Forward.Double
    Numeric.AD.Mode.Kahn Numeric.AD.Mode.Reverse Numeric.AD.Mode.Sparse
    Numeric.AD.Mode.Tower Numeric.AD.Newton Numeric.AD.Newton.Double
    Numeric.AD.Rank1.Forward Numeric.AD.Rank1.Forward.Double
    Numeric.AD.Rank1.Halley Numeric.AD.Rank1.Kahn
    Numeric.AD.Rank1.Newton Numeric.AD.Rank1.Newton.Double
    Numeric.AD.Rank1.Sparse Numeric.AD.Rank1.Tower
hidden-modules: Numeric.AD.Internal.Doctest
                Numeric.AD.Internal.Combinators
import-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\ad-4.4-497ZLZkOhOb4Fa5UWyyUGs
library-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\ad-4.4-497ZLZkOhOb4Fa5UWyyUGs
dynamic-library-dirs: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3
data-dir: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\x86_64-windows-ghc-8.4.3\ad-4.4
hs-libraries: HSad-4.4-497ZLZkOhOb4Fa5UWyyUGs
depends:
    array-0.5.2.0 base-4.11.1.0 comonad-5.0.6-79iCpP2oVcx81r6DjwUCC1
    containers-0.5.11.0 data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X
    erf-2.0.0.0-DoVcmknp6yaG2oYcmiezYS
    free-5.1.3-EOTzx2grjcUB9X2qp5dq7b nats-1.1.2-Bmcp8SRmmVkAy9EI1qz8po
    reflection-2.1.5-4zJe9vyBq5ZDxCes0P1i38
    semigroups-0.19.1-JDn4eENTeHD6LMg0HjKM2 transformers-0.5.5.0
abi-depends: array-0.5.2.0=644a41c787734b01982812aff5dd6873
             base-4.11.1.0=6bcc87f26fece7bc3dfd6e23d2246271
             comonad-5.0.6-79iCpP2oVcx81r6DjwUCC1=92f81054341ee03a5dd7ef28012666d9
             containers-0.5.11.0=92cf7f35178e47b40f68a145782e1031
             data-reify-0.6.1-CehYCkaPi4T7y6KDjVA45X=2e8a5724f396d2f573c1e753c13bb3e4
             erf-2.0.0.0-DoVcmknp6yaG2oYcmiezYS=a34e8f72e47c2271dcc533c9315485dd
             free-5.1.3-EOTzx2grjcUB9X2qp5dq7b=87f0b5febad3534a94d9acc8e1869dec
             nats-1.1.2-Bmcp8SRmmVkAy9EI1qz8po=f2d9c0bbff95c0d34ce9cb47d18f9f42
             reflection-2.1.5-4zJe9vyBq5ZDxCes0P1i38=0457552fc73f2aed6b883f9887f670ca
             semigroups-0.19.1-JDn4eENTeHD6LMg0HjKM2=157b5d646f29b1f5aec62f8d9e32416f
             transformers-0.5.5.0=6b5157dd8a1c75d5da79b701a5d779e9
haddock-interfaces: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\doc\x86_64-windows-ghc-8.4.3\ad-4.4\html\ad.haddock
haddock-html: C:\Users\sreynaud\Documents\haskelet\quantumStuff\.cabal-sandbox\doc\x86_64-windows-ghc-8.4.3\ad-4.4\html
